#! /bin/bash

pushd $(dirname $(readlink -f "$BASH_SOURCE")) > /dev/null
ROOT_DIR=$(pwd)
popd > /dev/null

# ipmi_sim_lancontrol - provide link addresses to ipmi_sim for device $1
# See lan_config_program in ipmi_lan(5)
#
# 2015-05-06  Noel Burton-Krahn <noel@pistoncloud.com>

# set -eu

echo $@ >> $ROOT_DIR/lancontrol.log

# arguments: dev op var
# network interface
dev=$1
shift
# get or set.  This script just supports get
op=$1
shift
# var name
var=$1

if [ -z "$var" ]; then
    echo "Usage: script <dev> <set|get> <var> ..."
    exit 1
fi

# my default gateway device
gw_dev=$(ip route | sed -ne 's/default via [.0-9]* dev \([^ ]*\) .*/\1/p')

link_ip() {
    ip -o -4 addr list $1 | sed -ne 's/.* inet \([.0-9]*\)\/.*/\1/p'
}

link_mac() {
    ip -o link list $1 | sed -ne 's/.* link\/ether \([:0-9a-f]*\) .*/\1/p'
}

link_subnet() {
    ifconfig $1 | sed -n -e 's/.*netmask \([.0-9]*\).*/\1/p'
}

get_val() {
    case $var in
    ip_addr_src)
        echo "static"
        ;;

    ip_addr)
        link_ip $dev
        ;;
    
    mac_addr)
        link_mac $dev
        ;;

    subnet_mask)
        link_subnet $dev
        ;;

    default_gw_ip_addr)
        link_ip $gw_dev
        ;;
    
    default_gw_mac_addr)
        link_mac $gw_dev
        ;;
        
    backup_gw_ip_addr)
        link_ip $gw_dev
        ;;
    
    backup_gw_mac_addr)
        link_mac $gw_dev
        ;;
    esac
}

if [ $op = "get" ]; then
    val=$(get_val $var)
    echo "$var: $val"
fi

IPADDR=""
IPADDRSRC=""
MASK=""

set_val() {
    name=$1
    val=$2
    case $name in
    ip_addr)
        IPADDR=$val
        ;;
    ip_addr_src)
        IPADDRSRC=$val
        ;;
    subnet_mask)
        MASK=$val
        ;;
    default_gw_ip_addr)
        GW=$val
        ;;
    esac
}

# ip_addr "10.168.222.42" ip_addr_src "static" subnet_mask "255.255.255.0" default_gw_ip_addr "10.168.222.1"
if [ $op = "set" ]; then
    while [ -n "$1" ];
    do
        set_val $1 $2
        shift
        shift
    done
    if [ "$IPADDRSRC" = "dhcp" ]; then
        echo $ROOT_DIR/dhtest -i $dev
        $ROOT_DIR/dhtest -i $dev
    fi
    if [ -n "IPADDR" ]; then
        ifconfig $dev $IPADDR up
    fi
    if [ -n "$MASK" ]; then
        ifconfig $dev netmask $MASK up
    fi
fi
